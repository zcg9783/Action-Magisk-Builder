name: Magisk Build (25200)

on:
  workflow_dispatch:
    inputs:
      MAGISK_REPO:
        description: 'Magisk Repository'
        required: true
        default: 'https://github.com/topjohnwu/Magisk'
      MAGISK_BRANCH:
        description: 'Magisk Repository Branch'
        required: true
        default: 'v25.2'

jobs:
  build:
    name: Build Magisk
    runs-on: ubuntu-24.04
    env:
      SCCACHE_DIRECT: false
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    permissions:
      contents: write
    strategy:
      fail-fast: false
    steps:
      - name: Check out
        uses: actions/checkout@v4

      - name: Clone Magisk
        run: |
          git clone --recurse-submodules ${{ inputs.MAGISK_REPO }} -b ${{ inputs.MAGISK_BRANCH }} ./Magisk
          echo "MAGISK_VERS=$(awk -F'=' '/magisk.versionCode/ {print $2}' Magisk/gradle.properties)" >> $GITHUB_ENV

      - name: Set up Rust toolchain
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: "nightly"
          components: rust-src
          profile: minimal

      - name: Set up JDK 11
        uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: "11"

      - name: Set up Python 3
        uses: actions/setup-python@v5
        with:
          python-version: "3.8"

      - name: Set up sccache
        uses: hendrikmuhs/ccache-action@v1.2
        with:
          variant: sccache
          key: ${{ runner.os }}-${{ github.sha }}
          restore-keys: ${{ runner.os }}
          max-size: 10000M

      - name: Cache Gradle dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
            !~/.gradle/caches/build-cache-*
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle.kts') }}
          restore-keys: ${{ runner.os }}-gradle-

      - name: Cache build cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches/build-cache-*
          key: ${{ runner.os }}-build-cache-${{ github.sha }}
          restore-keys: ${{ runner.os }}-build-cache-

      - name: Install Android NDK
        run: |
          # 安装最新版 NDK
          SDKMANAGER="$ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager"
          sudo $SDKMANAGER --install "ndk;26.4.0"
          
          # 设置环境变量
          echo "NDK_HOME=$ANDROID_HOME/ndk/26.4.0" >> $GITHUB_ENV
          echo "ANDROID_NDK_HOME=$ANDROID_HOME/ndk/26.4.0" >> $GITHUB_ENV
          echo "ANDROID_NDK_ROOT=$ANDROID_HOME/ndk/26.4.0" >> $GITHUB_ENV

      - name: Override Magisk NDK
        run: |
          # 备份原始 NDK
          sudo mv /usr/local/lib/android/sdk/ndk/magisk /usr/local/lib/android/sdk/ndk/magisk.bak
          
          # 创建符号链接到新 NDK
          sudo ln -s $ANDROID_HOME/ndk/26.4.0 /usr/local/lib/android/sdk/ndk/magisk
          
          # 验证 NDK 版本
          echo "New NDK version:"
          /usr/local/lib/android/sdk/ndk/magisk/ndk-build --version

      - name: Override Magisk NDK Rust
        run: |
          rustc_path=$(which rustc)
          cargo_path=$(which cargo)
          rust_dir="/usr/local/lib/android/sdk/ndk/magisk/toolchains/rust/bin"
          
          sudo mv "$rust_dir/rustc" "$rust_dir/rustc.bak" || true
          sudo mv "$rust_dir/cargo" "$rust_dir/cargo.bak" || true
          
          sudo ln -sf "$rustc_path" "$rust_dir/rustc"
          sudo ln -sf "$cargo_path" "$rust_dir/cargo"
          
          echo "New Magisk rustc version:"
          "$rust_dir/rustc" --version

      - name: Setup environment
        run: |
          sudo add-apt-repository ppa:ubuntu-toolchain-r/test -y
          sudo apt-get update
          sudo apt-get install --only-upgrade libstdc++6 -y
          sudo apt install unzip

      - name: Apply Patch
        continue-on-error: true
        run: |
          cd Magisk
          echo 1

      - name: Build debug
        run: |
          cd Magisk
          rustup default nightly
          # 添加不透明指针支持
          echo "buildFlags += [\"-opaque-pointers\"]" >> native/src/jni/Android.mk
          ./build.py -v all

      - name: Stop gradle daemon
        run: cd Magisk && ./gradlew --stop

      - name: Upload native binaries
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: ${{ github.sha }}-native
          path: Magisk/native/out
          compression-level: 9

      - name: Upload out
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: ${{ github.sha }}-out
          path: Magisk/out
          compression-level: 9

      - name: Upload to Release
        continue-on-error: true
        uses: softprops/action-gh-release@v1
        with:
          files: |
            Magisk/out/app-release.apk
            Magisk/out/app-debug.apk
            Magisk/out/napp-release.apk
            Magisk/out/napp-debug.apk
          name: Unofficial Magisk Build Release v${{ env.MAGISK_VERS }}
          tag_name: ${{ github.run_id }}
          body: |
            ## Resources
            - [Magisk Repository](${{ inputs.MAGISK_REPO }}/tree/${{ inputs.MAGISK_BRANCH }})
            ## Available Downloads
            - Release, for normal usage.
            - Debug, solely for debugging purposes.
            ## Notes
            - I, carlodandan, won't entertain any flashing/app/patching issue. Contact whoever the maintainer of the Magisk repository you used for building. Again, the builder you used is for personal use only. I am not responsible with any of the error upon flashing or patching.