name: Magisk Build (25200)

on:
  workflow_dispatch:
    inputs:
      MAGISK_REPO:
        description: 'Magisk Repository'
        required: true
        default: 'https://github.com/topjohnwu/Magisk'
      MAGISK_BRANCH:
        description: 'Magisk Repository Branch'
        required: true
        default: 'v25.2'

jobs:
  build:
    name: Build Magisk
    runs-on: ubuntu-22.04
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    permissions:
      contents: write
    strategy:
      fail-fast: false
    steps:
      - name: Check out
        uses: actions/checkout@v4

      - name: Clone Magisk
        run: |
          git clone --recurse-submodules ${{ inputs.MAGISK_REPO }} -b ${{ inputs.MAGISK_BRANCH }} ./Magisk
          echo "MAGISK_VERS=$(awk -F'=' '/magisk.versionCode/ {print $2}' Magisk/gradle.properties)" >> $GITHUB_ENV

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build Magisk in Docker
        run: |
          # 创建自定义 Dockerfile
          cat << EOF > Dockerfile
          FROM ubuntu:20.04
          
          # 设置环境变量
          ENV DEBIAN_FRONTEND=noninteractive
          
          # 安装基本依赖
          RUN apt-get update && apt-get install -y \
              git curl unzip python3 openjdk-11-jdk build-essential \
              libssl-dev pkg-config zlib1g-dev ccache \
              && rm -rf /var/lib/apt/lists/*
          
          # 安装特定版本的 protobuf
          RUN curl -LO https://github.com/protocolbuffers/protobuf/releases/download/v3.19.4/protoc-3.19.4-linux-x86_64.zip \
              && unzip protoc-3.19.4-linux-x86_64.zip -d protoc \
              && mv protoc/bin/protoc /usr/local/bin/ \
              && mv protoc/include/* /usr/local/include/ \
              && rm -rf protoc*
          
          # 安装 Rust 1.64 (与 Magisk v25.2 兼容)
          RUN curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y \
              --default-toolchain 1.64.0
          ENV PATH="/root/.cargo/bin:$PATH"
          
          # 设置工作目录
          WORKDIR /build
          EOF
          
          # 构建 Docker 镜像
          docker build -t magisk-builder:2022 .
          
          # 运行构建
          docker run --rm -v $(pwd)/Magisk:/build \
            -e SCCACHE_DIRECT=false \
            magisk-builder:2022 \
            /bin/bash -c "cd /build && ./build.py -v all"
          
          # 验证构建结果
          ls -la Magisk/out

      - name: Stop gradle daemon
        run: cd Magisk && ./gradlew --stop

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: magisk-build-${{ github.run_id }}
          path: Magisk/out
          compression-level: 9

      - name: Upload to Release
        continue-on-error: true
        uses: softprops/action-gh-release@v1
        with:
          files: |
            Magisk/out/app-release.apk
            Magisk/out/app-debug.apk
          name: Unofficial Magisk Build v${{ env.MAGISK_VERS }}
          tag_name: build-${{ github.run_id }}
          body: |
            ## Magisk ${{ env.MAGISK_VERS }} (v25.2)
            **Built on**: ${{ github.event.repository.updated_at }}
            **Commit**: ${{ github.sha }}
            **Build method**: Docker container with compatible toolchain
            
            ## Notes
            This is an unofficial build for testing and development purposes.
            Report issues to the original repository maintainers.